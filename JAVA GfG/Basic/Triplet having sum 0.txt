// { Driver Code Starts
import java.util.*;
class Triplets{
	public static void main(String[] args){
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		while(t-->0){
			int n=sc.nextInt();
			int[] a=new int[n];
			for(int i=0;i<n;i++){
				a[i]=sc.nextInt();
			}
			Solution g=new Solution();
			if(g.findTriplets(a,n))
				System.out.println("1");
			else
				System.out.println("0");
			
		}
	}
}// } Driver Code Ends


/*Complete the function below*/


Given an array arr[] of n integers. Check whether it contains a triplet that sums up to zero.

//For loop for the array traversal. 2 pointer and element+1 and end. checking if sum of element+1 and end is = -(element)

class Solution
{
    // arr[]: input array
    // n: size of the array
    //Function to find triplets with zero sum.
	public boolean findTriplets(int arr[] , int n)
    {
         Arrays.sort(arr);
       for(int i=0;i<n;i++){
           int low=i+1,high=n-1;
           while(low<high){
               if(arr[low]+arr[high] < -arr[i])

                          low++;
               else if(arr[low]+arr[high] > -arr[i]) 

                           high--;
               else 

                       return true;
           }
       }
       return false;
    }
}