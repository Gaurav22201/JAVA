Given an array Arr of size N with all elements greater than or equal to zero. 
Return the maximum product of two numbers possible.

Example 1:

Input: 
N = 6
Arr[] = {1, 4, 3, 6, 7, 0}  
Output: 42

// { Driver Code Starts
//Initial Template for Java




import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int tc = Integer.parseInt(br.readLine().trim());
        while (tc-- > 0) {
            String[] inputLine;
            int n = Integer.parseInt(br.readLine().trim());
            int[] arr = new int[n];
            inputLine = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                arr[i] = Integer.parseInt(inputLine[i]);
            }

            int ans = new Solution().maxProduct(arr, n);
            System.out.println(ans);
        }
    }
}
// } Driver Code Ends


//User function Template for Java



class Solution {
    int maxProduct(int arr[], int n) {


        //Easy Solution
	// Arrays.sort(arr);
        // return arr[n-1]*arr[n-2];


        int max=0,secmax = 0;
       for(int i=0;i<n;i++){
           if(arr[i] > max){
               secmax = max;
               max = arr[i];
           }else if(arr[i] > secmax){
               secmax = arr[i];
           }
       }
       return max*secmax;
}
    }
